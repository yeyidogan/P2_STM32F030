Component: ARM Compiler 5.06 update 4 (build 422) Tool: armlink [4d35d2]

==============================================================================

Section Cross References

    main.o(i.main) refers to system_stm32f0xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to gpio.o(i.initGpio) for initGpio
    main.o(i.main) refers to pub_var.o(i.setParameters) for setParameters
    main.o(i.main) refers to uart.o(i.initUart1) for initUart1
    main.o(i.main) refers to uart.o(i.initUartDma) for initUartDma
    main.o(i.main) refers to uart.o(i.uartNvicConfig) for uartNvicConfig
    main.o(i.main) refers to timer.o(i.initTimers) for initTimers
    main.o(i.main) refers to i2c.o(i.initI2C) for initI2C
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    main.o(i.main) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to pub_var.o(.bss) for sys_par
    main.o(i.main) refers to main.o(.data) for mutex_I2C
    main.o(i.main) refers to main.o(i.task_Led) for task_Led
    main.o(i.main) refers to hdc1080.o(i.task_HDC1080) for task_HDC1080
    main.o(i.main) refers to uart.o(i.task_Uart1) for task_Uart1
    main.o(i.main) refers to stepper_motor.o(i.task_stepper_motor) for task_stepper_motor
    main.o(i.task_Led) refers to rtx_delay.o(.text.osDelay) for osDelay
    pub_var.o(i.setParameters) refers to pub_var.o(.bss) for sys_par
    hdc1080.o(i.init_HDC1080) refers to hdc1080.o(i.write_HDC1080_configuration) for write_HDC1080_configuration
    hdc1080.o(i.init_HDC1080) refers to rtx_delay.o(.text.osDelay) for osDelay
    hdc1080.o(i.init_HDC1080) refers to hdc1080.o(.data) for stHDC1080Status
    hdc1080.o(i.init_HDC1080) refers to i2c.o(.bss) for ucI2CTxBuf
    hdc1080.o(i.read_HDC1080_configuration) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    hdc1080.o(i.read_HDC1080_configuration) refers to i2c.o(i.i2c_master_process) for i2c_master_process
    hdc1080.o(i.read_HDC1080_configuration) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    hdc1080.o(i.read_HDC1080_configuration) refers to main.o(.data) for mutex_I2C
    hdc1080.o(i.read_HDC1080_configuration) refers to hdc1080.o(.data) for statusT
    hdc1080.o(i.read_HDC1080_configuration) refers to i2c.o(.data) for ucI2CMasterSendStartStop
    hdc1080.o(i.task_HDC1080) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    hdc1080.o(i.task_HDC1080) refers to rtx_thread.o(.text.osThreadSetPriority) for osThreadSetPriority
    hdc1080.o(i.task_HDC1080) refers to hdc1080.o(i.trig_HDC1080) for trig_HDC1080
    hdc1080.o(i.task_HDC1080) refers to rtx_delay.o(.text.osDelay) for osDelay
    hdc1080.o(i.task_HDC1080) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    hdc1080.o(i.task_HDC1080) refers to i2c.o(i.i2c_master_process) for i2c_master_process
    hdc1080.o(i.task_HDC1080) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    hdc1080.o(i.task_HDC1080) refers to util.o(i.wordEndianer) for wordEndianer
    hdc1080.o(i.task_HDC1080) refers to hdc1080.o(i.init_HDC1080) for init_HDC1080
    hdc1080.o(i.task_HDC1080) refers to hdc1080.o(.data) for statusT
    hdc1080.o(i.task_HDC1080) refers to main.o(.data) for mutex_I2C
    hdc1080.o(i.task_HDC1080) refers to i2c.o(.data) for ucI2CMasterSendStartStop
    hdc1080.o(i.task_HDC1080) refers to i2c.o(.bss) for ucI2CRxBuf
    hdc1080.o(i.trig_HDC1080) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    hdc1080.o(i.trig_HDC1080) refers to i2c.o(i.i2c_master_process) for i2c_master_process
    hdc1080.o(i.trig_HDC1080) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    hdc1080.o(i.trig_HDC1080) refers to main.o(.data) for mutex_I2C
    hdc1080.o(i.trig_HDC1080) refers to hdc1080.o(.data) for statusT
    hdc1080.o(i.trig_HDC1080) refers to i2c.o(.data) for ucI2CMasterSendStartStop
    hdc1080.o(i.trig_HDC1080) refers to i2c.o(.bss) for ucI2CTxBuf
    hdc1080.o(i.write_HDC1080_configuration) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    hdc1080.o(i.write_HDC1080_configuration) refers to i2c.o(i.i2c_master_process) for i2c_master_process
    hdc1080.o(i.write_HDC1080_configuration) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    hdc1080.o(i.write_HDC1080_configuration) refers to main.o(.data) for mutex_I2C
    hdc1080.o(i.write_HDC1080_configuration) refers to hdc1080.o(.data) for statusT
    hdc1080.o(i.write_HDC1080_configuration) refers to i2c.o(.data) for ucI2CMasterSendStartStop
    modbus.o(i.checkCrc16) refers to modbus.o(.constdata) for .constdata
    modbus.o(i.crc16) refers to modbus.o(.constdata) for .constdata
    modbus.o(i.mbReturnException) refers to modbus.o(i.crc16) for crc16
    modbus.o(i.mbReturnException) refers to modbus.o(.bss) for mbTxRxData
    modbus.o(i.modbusRTU) refers to modbus.o(i.checkCrc16) for checkCrc16
    modbus.o(i.modbusRTU) refers to util.o(i.wordEndianer) for wordEndianer
    modbus.o(i.modbusRTU) refers to modbus.o(i.mbReturnException) for mbReturnException
    modbus.o(i.modbusRTU) refers to modbus_func.o(i.readCoils) for readCoils
    modbus.o(i.modbusRTU) refers to modbus_func.o(i.readInputs) for readInputs
    modbus.o(i.modbusRTU) refers to modbus_func.o(i.readHoldingRegister) for readHoldingRegister
    modbus.o(i.modbusRTU) refers to modbus_func.o(i.writeSingleCoil) for writeSingleCoil
    modbus.o(i.modbusRTU) refers to modbus.o(.bss) for mbTxRxData
    modbus.o(i.modbusRTU) refers to modbus.o(.data) for uiWordQty
    modbus.o(i.modbusRTU) refers to modbus_func.o(.constdata) for sizeOfHoldingRegister
    modbus_func.o(i.readCoils) refers to gpio.o(i.readGpioOutputs) for readGpioOutputs
    modbus_func.o(i.readCoils) refers to modbus.o(i.crc16) for crc16
    modbus_func.o(i.readCoils) refers to gpio.o(.data) for ulOutputs
    modbus_func.o(i.readCoils) refers to modbus_func.o(.data) for ulMfTmp
    modbus_func.o(i.readCoils) refers to modbus.o(.bss) for mbTxRxData
    modbus_func.o(i.readHoldingRegister) refers to modbus_func.o(i.__ARM_common_switch8) for __ARM_common_switch8
    modbus_func.o(i.readHoldingRegister) refers to modbus.o(i.crc16) for crc16
    modbus_func.o(i.readHoldingRegister) refers to modbus.o(.bss) for mbTxRxData
    modbus_func.o(i.readHoldingRegister) refers to modbus.o(.data) for uiWordQty
    modbus_func.o(i.readHoldingRegister) refers to modbus_func.o(.data) for ptruChar
    modbus_func.o(i.readHoldingRegister) refers to modbus_func.o(.constdata) for stHoldingRegArray
    modbus_func.o(i.readInputs) refers to gpio.o(i.readGpioInputs) for readGpioInputs
    modbus_func.o(i.readInputs) refers to modbus.o(i.crc16) for crc16
    modbus_func.o(i.readInputs) refers to gpio.o(.data) for ulInputs
    modbus_func.o(i.readInputs) refers to modbus_func.o(.data) for ulMfTmp
    modbus_func.o(i.readInputs) refers to modbus.o(.bss) for mbTxRxData
    modbus_func.o(i.writeSingleCoil) refers to util.o(i.wordEndianer) for wordEndianer
    modbus_func.o(i.writeSingleCoil) refers to gpio.o(i.setGpioOutputs) for setGpioOutputs
    modbus_func.o(i.writeSingleCoil) refers to modbus.o(i.crc16) for crc16
    modbus_func.o(i.writeSingleCoil) refers to modbus.o(.bss) for mbTxRxData
    modbus_func.o(i.writeSingleCoil) refers to modbus_func.o(.data) for ulMfTmp
    modbus_func.o(i.writeSingleCoil) refers to gpio.o(.data) for ulOutputs
    modbus_func.o(.constdata) refers to modbus_func.o(.data) for ulPar1
    modbus_func.o(.constdata) refers to modbus_func.o(i.rwDummyFunc) for rwDummyFunc
    stepper_motor.o(i.task_stepper_motor) refers to gpio.o(i.setGpioOutputs) for setGpioOutputs
    stepper_motor.o(i.task_stepper_motor) refers to gpio.o(i.readGpioInputs) for readGpioInputs
    stepper_motor.o(i.task_stepper_motor) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    stepper_motor.o(i.task_stepper_motor) refers to rtx_delay.o(.text.osDelay) for osDelay
    stepper_motor.o(i.task_stepper_motor) refers to stepper_motor.o(.data) for active_motor
    stepper_motor.o(i.task_stepper_motor) refers to stepper_motor.o(.bss) for motor_s
    stepper_motor.o(i.task_stepper_motor) refers to stepper_motor.o(.constdata) for ulStepperEn
    stepper_motor.o(i.task_stepper_motor) refers to gpio.o(.data) for ulOutputs
    stepper_motor.o(i.task_stepper_motor) refers to main.o(.data) for event_general
    hc0x_bluetooth.o(i.change_device_name) refers to util.o(i.copy_string) for copy_string
    hc0x_bluetooth.o(i.change_device_name) refers to uart.o(i.uart1TxCmd) for uart1TxCmd
    hc0x_bluetooth.o(i.change_device_name) refers to rtx_delay.o(.text.osDelay) for osDelay
    hc0x_bluetooth.o(i.change_device_name) refers to uart.o(i.uart1CheckRxBuf) for uart1CheckRxBuf
    hc0x_bluetooth.o(i.change_device_name) refers to util.o(i.compare_string) for compare_string
    hc0x_bluetooth.o(i.change_device_name) refers to uart.o(.data) for uart1Tx
    hc0x_bluetooth.o(i.change_device_name) refers to uart.o(.bss) for uart1Rx
    hc0x_bluetooth.o(i.mobile_app_interface) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    hc0x_bluetooth.o(i.mobile_app_interface) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    hc0x_bluetooth.o(i.mobile_app_interface) refers to _printf_dec.o(.text) for _printf_int_dec
    hc0x_bluetooth.o(i.mobile_app_interface) refers to uart.o(i.uart1CheckRxBuf) for uart1CheckRxBuf
    hc0x_bluetooth.o(i.mobile_app_interface) refers to util.o(i.compare_string) for compare_string
    hc0x_bluetooth.o(i.mobile_app_interface) refers to noretval__2sprintf.o(.text) for __2sprintf
    hc0x_bluetooth.o(i.mobile_app_interface) refers to util.o(i.count_string) for count_string
    hc0x_bluetooth.o(i.mobile_app_interface) refers to uart.o(i.uart1TxCmd) for uart1TxCmd
    hc0x_bluetooth.o(i.mobile_app_interface) refers to uart.o(i.uart2TxCmd) for uart2TxCmd
    hc0x_bluetooth.o(i.mobile_app_interface) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    hc0x_bluetooth.o(i.mobile_app_interface) refers to uart.o(.bss) for uart1Rx
    hc0x_bluetooth.o(i.mobile_app_interface) refers to uart.o(.data) for uart1Tx
    hc0x_bluetooth.o(i.mobile_app_interface) refers to hdc1080.o(.data) for stHDC1080Status
    hc0x_bluetooth.o(i.mobile_app_interface) refers to stepper_motor.o(.bss) for motor_s
    hc0x_bluetooth.o(i.mobile_app_interface) refers to main.o(.data) for event_general
    stm32f0xx_gpio.o(i.GPIO_DeInit) refers to stm32f0xx_rcc.o(i.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    stm32f0xx_usart.o(i.USART_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f0xx_usart.o(i.USART_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_usart.o(i.USART_Init) refers to stm32f0xx_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f0xx_usart.o(i.USART_Init) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    stm32f0xx_i2c.o(i.I2C_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    gpio.o(i.initGpio) refers to stm32f0xx_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    gpio.o(i.initGpio) refers to stm32f0xx_gpio.o(i.GPIO_Init) for GPIO_Init
    gpio.o(i.readGpioInputs) refers to gpio.o(.data) for ulInputs
    gpio.o(i.readGpioOutputs) refers to gpio.o(.data) for ulOutputs
    gpio.o(i.setGpioOutputs) refers to gpio.o(.data) for ulOutputs
    uart.o(i.DMA1_Channel2_3_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.DMA1_Channel2_3_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_ClearFlag) for DMA_ClearFlag
    uart.o(i.DMA1_Channel2_3_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_ClearITPendingBit) for DMA_ClearITPendingBit
    uart.o(i.DMA1_Channel2_3_IRQHandler) refers to uart.o(.data) for uart1Flags
    uart.o(i.DMA1_Channel4_5_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.DMA1_Channel4_5_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_ClearFlag) for DMA_ClearFlag
    uart.o(i.DMA1_Channel4_5_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_ClearITPendingBit) for DMA_ClearITPendingBit
    uart.o(i.DMA1_Channel4_5_IRQHandler) refers to uart.o(.data) for uart2Flags
    uart.o(i.USART1_IRQHandler) refers to stm32f0xx_usart.o(i.USART_GetITStatus) for USART_GetITStatus
    uart.o(i.USART1_IRQHandler) refers to stm32f0xx_usart.o(i.USART_ClearITPendingBit) for USART_ClearITPendingBit
    uart.o(i.USART1_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.USART1_IRQHandler) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    uart.o(i.USART1_IRQHandler) refers to uart.o(.data) for uart1Flags
    uart.o(i.USART1_IRQHandler) refers to uart.o(.bss) for uart1Rx
    uart.o(i.USART1_IRQHandler) refers to main.o(.data) for event_general
    uart.o(i.USART2_IRQHandler) refers to stm32f0xx_usart.o(i.USART_GetITStatus) for USART_GetITStatus
    uart.o(i.USART2_IRQHandler) refers to stm32f0xx_usart.o(i.USART_ClearITPendingBit) for USART_ClearITPendingBit
    uart.o(i.USART2_IRQHandler) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.USART2_IRQHandler) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    uart.o(i.USART2_IRQHandler) refers to uart.o(.data) for uart2Flags
    uart.o(i.USART2_IRQHandler) refers to uart.o(.bss) for uart2Rx
    uart.o(i.USART2_IRQHandler) refers to main.o(.data) for event_general
    uart.o(i.initUart1) refers to stm32f0xx_usart.o(i.USART_Init) for USART_Init
    uart.o(i.initUart1) refers to stm32f0xx_usart.o(i.USART_SetReceiverTimeOut) for USART_SetReceiverTimeOut
    uart.o(i.initUart1) refers to stm32f0xx_usart.o(i.USART_ReceiverTimeOutCmd) for USART_ReceiverTimeOutCmd
    uart.o(i.initUart1) refers to stm32f0xx_usart.o(i.USART_ITConfig) for USART_ITConfig
    uart.o(i.initUart2) refers to stm32f0xx_usart.o(i.USART_Init) for USART_Init
    uart.o(i.initUart2) refers to stm32f0xx_usart.o(i.USART_SetReceiverTimeOut) for USART_SetReceiverTimeOut
    uart.o(i.initUart2) refers to stm32f0xx_usart.o(i.USART_ReceiverTimeOutCmd) for USART_ReceiverTimeOutCmd
    uart.o(i.initUart2) refers to stm32f0xx_usart.o(i.USART_ITConfig) for USART_ITConfig
    uart.o(i.initUartDma) refers to stm32f0xx_dma.o(i.DMA_DeInit) for DMA_DeInit
    uart.o(i.initUartDma) refers to stm32f0xx_dma.o(i.DMA_Init) for DMA_Init
    uart.o(i.initUartDma) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.initUartDma) refers to stm32f0xx_dma.o(i.DMA_ITConfig) for DMA_ITConfig
    uart.o(i.initUartDma) refers to stm32f0xx_usart.o(i.USART_DMACmd) for USART_DMACmd
    uart.o(i.initUartDma) refers to uart.o(.bss) for uart1Rx
    uart.o(i.initUartDma) refers to uart.o(.data) for uart1Flags
    uart.o(i.task_Uart1) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    uart.o(i.task_Uart1) refers to modbus.o(i.modbusRTU) for modbusRTU
    uart.o(i.task_Uart1) refers to rtx_delay.o(.text.osDelay) for osDelay
    uart.o(i.task_Uart1) refers to uart.o(i.uart1TxCmd) for uart1TxCmd
    uart.o(i.task_Uart1) refers to main.o(.data) for event_general
    uart.o(i.task_Uart1) refers to pub_var.o(.bss) for sys_par
    uart.o(i.task_Uart1) refers to uart.o(.data) for uart1Tx
    uart.o(i.task_Uart1) refers to modbus.o(.bss) for mbTxRxData
    uart.o(i.task_Uart1) refers to uart.o(.bss) for uart1Rx
    uart.o(i.task_Uart2) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    uart.o(i.task_Uart2) refers to modbus.o(i.modbusRTU) for modbusRTU
    uart.o(i.task_Uart2) refers to rtx_delay.o(.text.osDelay) for osDelay
    uart.o(i.task_Uart2) refers to uart.o(i.uart2TxCmd) for uart2TxCmd
    uart.o(i.task_Uart2) refers to hc0x_bluetooth.o(i.mobile_app_interface) for mobile_app_interface
    uart.o(i.task_Uart2) refers to main.o(.data) for event_general
    uart.o(i.task_Uart2) refers to pub_var.o(.bss) for sys_par
    uart.o(i.task_Uart2) refers to uart.o(.data) for uart2Tx
    uart.o(i.task_Uart2) refers to modbus.o(.bss) for mbTxRxData
    uart.o(i.task_Uart2) refers to uart.o(.bss) for uart2Rx
    uart.o(i.uart1CheckRxBuf) refers to uart.o(.bss) for uart1Rx
    uart.o(i.uart1TxCmd) refers to rtx_delay.o(.text.osDelay) for osDelay
    uart.o(i.uart1TxCmd) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.uart1TxCmd) refers to stm32f0xx_dma.o(i.DMA_GetFlagStatus) for DMA_GetFlagStatus
    uart.o(i.uart1TxCmd) refers to stm32f0xx_dma.o(i.DMA_ClearFlag) for DMA_ClearFlag
    uart.o(i.uart1TxCmd) refers to stm32f0xx_usart.o(i.USART_ClearFlag) for USART_ClearFlag
    uart.o(i.uart1TxCmd) refers to uart.o(.data) for uiTimerUart1
    uart.o(i.uart2CheckRxBuf) refers to uart.o(.bss) for uart2Rx
    uart.o(i.uart2TxCmd) refers to rtx_delay.o(.text.osDelay) for osDelay
    uart.o(i.uart2TxCmd) refers to stm32f0xx_dma.o(i.DMA_Cmd) for DMA_Cmd
    uart.o(i.uart2TxCmd) refers to stm32f0xx_dma.o(i.DMA_GetFlagStatus) for DMA_GetFlagStatus
    uart.o(i.uart2TxCmd) refers to stm32f0xx_dma.o(i.DMA_ClearFlag) for DMA_ClearFlag
    uart.o(i.uart2TxCmd) refers to stm32f0xx_usart.o(i.USART_ClearFlag) for USART_ClearFlag
    uart.o(i.uart2TxCmd) refers to uart.o(.data) for uiTimerUart2
    uart.o(i.uartNvicConfig) refers to stm32f0xx_misc.o(i.NVIC_Init) for NVIC_Init
    i2c.o(i.I2C1_IRQHandler) refers to i2c.o(.bss) for ucI2CRxBuf
    i2c.o(i.I2C1_IRQHandler) refers to i2c.o(.data) for i2cRxBufPtr
    i2c.o(i.i2c_master_process) refers to i2c.o(.data) for ucI2CMasterSendStartStop
    i2c.o(i.i2c_master_process) refers to i2c.o(.bss) for ucI2CTxBuf
    i2c.o(i.initI2C) refers to i2c.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    timer.o(i.TIM6_IRQHandler) refers to i2c.o(.data) for uiTimerI2C
    timer.o(i.TIM6_IRQHandler) refers to hdc1080.o(.data) for uiTimerHDC1080
    timer.o(i.TIM6_IRQHandler) refers to uart.o(.data) for uiTimerUart1
    timer.o(i.initTimers) refers to timer.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f0xx_tim.o(i.TIM_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f0xx_tim.o(i.TIM_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_tim.o(i.TIM_ETRClockMode1Config) refers to stm32f0xx_tim.o(i.TIM_ETRConfig) for TIM_ETRConfig
    stm32f0xx_tim.o(i.TIM_ETRClockMode2Config) refers to stm32f0xx_tim.o(i.TIM_ETRConfig) for TIM_ETRConfig
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI1_Config) for TI1_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI2_Config) for TI2_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI3_Config) for TI3_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI4_Config) for TI4_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    stm32f0xx_tim.o(i.TIM_ITRxExternalClockConfig) refers to stm32f0xx_tim.o(i.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TI1_Config) for TI1_Config
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TI2_Config) for TI2_Config
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f0xx_tim.o(i.TI2_Config) for TI2_Config
    stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f0xx_tim.o(i.TI1_Config) for TI1_Config
    stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f0xx_tim.o(i.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f0xx_rcc.o(i.RCC_GetClocksFreq) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    stm32f0xx_rcc.o(i.RCC_GetClocksFreq) refers to stm32f0xx_rcc.o(.data) for APBAHBPrescTable
    stm32f0xx_rcc.o(i.RCC_WaitForHSEStartUp) refers to stm32f0xx_rcc.o(i.RCC_GetFlagStatus) for RCC_GetFlagStatus
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os) for os_libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_config.o(i.osRtxErrorNotify) refers to modbus_func.o(i.__ARM_common_switch8) for __ARM_common_switch8
    startup_stm32f030x8.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(RESET) refers to startup_stm32f030x8.o(STACK) for __initial_sp
    startup_stm32f030x8.o(RESET) refers to startup_stm32f030x8.o(.text) for Reset_Handler
    startup_stm32f030x8.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_stm32f030x8.o(RESET) refers to uart.o(i.DMA1_Channel2_3_IRQHandler) for DMA1_Channel2_3_IRQHandler
    startup_stm32f030x8.o(RESET) refers to uart.o(i.DMA1_Channel4_5_IRQHandler) for DMA1_Channel4_5_IRQHandler
    startup_stm32f030x8.o(RESET) refers to timer.o(i.TIM6_IRQHandler) for TIM6_IRQHandler
    startup_stm32f030x8.o(RESET) refers to i2c.o(i.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_stm32f030x8.o(RESET) refers to uart.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f030x8.o(RESET) refers to uart.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f030x8.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030x8.o(.text) refers to system_stm32f0xx.o(i.SystemInit) for SystemInit
    startup_stm32f030x8.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f030x8.o(.text) refers to startup_stm32f030x8.o(HEAP) for Heap_Mem
    startup_stm32f030x8.o(.text) refers to startup_stm32f030x8.o(STACK) for Stack_Mem
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to aeabi_sdivfast.o(.text) for __aeabi_uidivmod
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to system_stm32f0xx.o(.constdata) for AHBPrescTable
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to aeabi_sdivfast.o(.text) for __aeabi_uidiv
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    __2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    __2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    noretval__2sprintf.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    noretval__2sprintf.o(.text) refers to _sputc.o(.text) for _sputc
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_dec.o(.text) refers to rtudiv10.o(.text) for __rt_udiv10
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f030x8.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing util.o(i.compare_string), (46 bytes).
    Removing util.o(i.copy_string), (44 bytes).
    Removing util.o(i.count_string), (36 bytes).
    Removing hdc1080.o(.rev16_text), (4 bytes).
    Removing hdc1080.o(.revsh_text), (4 bytes).
    Removing hdc1080.o(i.read_HDC1080_configuration), (180 bytes).
    Removing modbus.o(.rev16_text), (4 bytes).
    Removing modbus.o(.revsh_text), (4 bytes).
    Removing modbus_func.o(.rev16_text), (4 bytes).
    Removing modbus_func.o(.revsh_text), (4 bytes).
    Removing stepper_motor.o(.rev16_text), (4 bytes).
    Removing stepper_motor.o(.revsh_text), (4 bytes).
    Removing hc0x_bluetooth.o(.rev16_text), (4 bytes).
    Removing hc0x_bluetooth.o(.revsh_text), (4 bytes).
    Removing hc0x_bluetooth.o(i.change_device_name), (72 bytes).
    Removing hc0x_bluetooth.o(i.mobile_app_interface), (700 bytes).
    Removing stm32f0xx_dma.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_dma.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_dma.o(i.DMA_GetCurrDataCounter), (8 bytes).
    Removing stm32f0xx_dma.o(i.DMA_GetITStatus), (52 bytes).
    Removing stm32f0xx_dma.o(i.DMA_RemapConfig), (52 bytes).
    Removing stm32f0xx_dma.o(i.DMA_SetCurrDataCounter), (4 bytes).
    Removing stm32f0xx_dma.o(i.DMA_StructInit), (26 bytes).
    Removing stm32f0xx_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_DeInit), (176 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_PinLockConfig), (34 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit), (20 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadOutputDataBit), (20 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ResetBits), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_SetBits), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_StructInit), (24 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_Write), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_WriteBit), (12 bytes).
    Removing stm32f0xx_misc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_misc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_misc.o(i.NVIC_SystemLPConfig), (32 bytes).
    Removing stm32f0xx_misc.o(i.SysTick_CLKSourceConfig), (36 bytes).
    Removing stm32f0xx_usart.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_usart.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_usart.o(i.USART_AddressDetectionConfig), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_AutoBaudRateCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_AutoBaudRateConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_ClockInit), (36 bytes).
    Removing stm32f0xx_usart.o(i.USART_ClockStructInit), (12 bytes).
    Removing stm32f0xx_usart.o(i.USART_Cmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_DECmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_DEPolarityConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_DMAReceptionErrorConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_DataInvCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_DeInit), (240 bytes).
    Removing stm32f0xx_usart.o(i.USART_DirectionModeCmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_GetFlagStatus), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_HalfDuplexCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_InvPinCmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_IrDACmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_IrDAConfig), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_LINCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_MSBFirstCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_MuteModeCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_MuteModeWakeUpConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_OneBitMethodCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_OverSampling8Cmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_OverrunDetectionConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_ReceiveData), (10 bytes).
    Removing stm32f0xx_usart.o(i.USART_RequestCmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_STOPModeCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_SWAPPinCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_SendData), (8 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetAddress), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetAutoRetryCount), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetBlockLength), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetDEAssertionTime), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetDEDeassertionTime), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetGuardTime), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetPrescaler), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_SmartCardCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_SmartCardNACKCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_StopModeWakeUpSourceConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_StructInit), (24 bytes).
    Removing stm32f0xx_i2c.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_i2c.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_10BitAddressHeaderCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_10BitAddressingModeCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_AcknowledgeConfig), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_AutoEndCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_CalculatePEC), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ClearFlag), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ClearITPendingBit), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ClockTimeoutCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_Cmd), (24 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_DMACmd), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_DeInit), (56 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_DualAddressCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ExtendedClockTimeoutCmd), (26 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GeneralCallCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GenerateSTART), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GenerateSTOP), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetAddressMatched), (14 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetITStatus), (78 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetPEC), (8 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetTransferDirection), (30 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ITConfig), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_IdleClockTimeoutCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_Init), (108 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_MasterRequestConfig), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_NumberOfBytesConfig), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_OwnAddress2Config), (36 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_PECRequestCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ReadRegister), (22 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ReceiveData), (8 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ReloadCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SMBusAlertCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SendData), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SlaveAddressConfig), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SlaveByteControlCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SoftwareResetCmd), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_StopModeCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_StretchClockCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_StructInit), (24 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_TimeoutAConfig), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_TimeoutBConfig), (32 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_TransferHandling), (44 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(i.initUart2), (128 bytes).
    Removing uart.o(i.task_Uart2), (204 bytes).
    Removing uart.o(i.uart1CheckRxBuf), (56 bytes).
    Removing uart.o(i.uart2CheckRxBuf), (56 bytes).
    Removing uart.o(i.uart2TxCmd), (132 bytes).
    Removing i2c.o(.rev16_text), (4 bytes).
    Removing i2c.o(.revsh_text), (4 bytes).
    Removing timer.o(.rev16_text), (4 bytes).
    Removing timer.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_tim.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_tim.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_tim.o(i.TI1_Config), (56 bytes).
    Removing stm32f0xx_tim.o(i.TI2_Config), (76 bytes).
    Removing stm32f0xx_tim.o(i.TI3_Config), (72 bytes).
    Removing stm32f0xx_tim.o(i.TI4_Config), (80 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ARRPreloadConfig), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_BDTRConfig), (32 bytes).
    Removing stm32f0xx_tim.o(i.TIM_BDTRStructInit), (18 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CCPreloadControl), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CCxCmd), (30 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CCxNCmd), (30 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearFlag), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearITPendingBit), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC1Ref), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC2Ref), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC3Ref), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC4Ref), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_Cmd), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CounterModeConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CtrlPWMOutputs), (34 bytes).
    Removing stm32f0xx_tim.o(i.TIM_DMACmd), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_DMAConfig), (12 bytes).
    Removing stm32f0xx_tim.o(i.TIM_DeInit), (260 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ETRClockMode1Config), (52 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ETRClockMode2Config), (34 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ETRConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_EncoderInterfaceConfig), (68 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC1Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC2Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC3Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC4Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GenerateEvent), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture1), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture2), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture3), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture4), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCounter), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetFlagStatus), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetITStatus), (38 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetPrescaler), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ICInit), (112 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ICStructInit), (18 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ITConfig), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ITRxExternalClockConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_InternalClockConfig), (16 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1Init), (148 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1NPolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2Init), (172 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2NPolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3Init), (152 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3NPolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4Init), (112 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OCStructInit), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_PWMIConfig), (124 bytes).
    Removing stm32f0xx_tim.o(i.TIM_PrescalerConfig), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_RemapConfig), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectCCDMA), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectCOM), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectHallSensor), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectInputTrigger), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectMasterSlaveMode), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOCREFClear), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOCxM), (82 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOnePulseMode), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOutputTrigger), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectSlaveMode), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetAutoreload), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetClockDivision), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare1), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare2), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare3), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare4), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCounter), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC1Prescaler), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC2Prescaler), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC3Prescaler), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC4Prescaler), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig), (58 bytes).
    Removing stm32f0xx_tim.o(i.TIM_TimeBaseInit), (124 bytes).
    Removing stm32f0xx_tim.o(i.TIM_TimeBaseStructInit), (18 bytes).
    Removing stm32f0xx_tim.o(i.TIM_UpdateDisableConfig), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_UpdateRequestConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ADCCLKConfig), (56 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AHBPeriphResetCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AdjustHSI14CalibrationValue), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AdjustHSICalibrationValue), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_BackupResetCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_CECCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ClearFlag), (20 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ClockSecuritySystemCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_DeInit), (120 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_GetFlagStatus), (72 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_GetITStatus), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HCLKConfig), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSEConfig), (16 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSI14ADCRequestCmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSI14Cmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSI48Cmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSICmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_I2CCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ITConfig), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_LSEConfig), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_LSEDriveConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_LSICmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_MCOConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PCLKConfig), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PLLCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PLLConfig), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PREDIV1Config), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_RTCCLKCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_SYSCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_USARTCLKConfig), (72 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_USBCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_WaitForHSEStartUp), (60 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (108 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing system_stm32f0xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f0xx.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (220 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (104 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (148 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (308 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (164 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (316 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (672 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (460 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (176 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (68 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (24 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (76 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (24 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (120 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (108 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (30 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (232 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (164 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (26 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (116 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (564 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (174 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (28 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (164 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (140 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (56 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess), (476 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueNew), (456 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGet), (448 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (28 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (378 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (140 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGet), (224 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (60 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).

611 unused section(s) (total 21876 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_evflags.c            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/division.c                       0x00000000   Number         0  rtudiv10.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _sputc.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2sprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F030R8\startup_stm32f030x8.s 0x00000000   Number         0  startup_stm32f030x8.o ABSOLUTE
    RTE\Device\STM32F030R8\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F030R8\\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    app\\hc0x_bluetooth.c                    0x00000000   Number         0  hc0x_bluetooth.o ABSOLUTE
    app\\hdc1080.c                           0x00000000   Number         0  hdc1080.o ABSOLUTE
    app\\main.c                              0x00000000   Number         0  main.o ABSOLUTE
    app\\modbus.c                            0x00000000   Number         0  modbus.o ABSOLUTE
    app\\modbus_func.c                       0x00000000   Number         0  modbus_func.o ABSOLUTE
    app\\stepper_motor.c                     0x00000000   Number         0  stepper_motor.o ABSOLUTE
    app\hc0x_bluetooth.c                     0x00000000   Number         0  hc0x_bluetooth.o ABSOLUTE
    app\hdc1080.c                            0x00000000   Number         0  hdc1080.o ABSOLUTE
    app\main.c                               0x00000000   Number         0  main.o ABSOLUTE
    app\modbus.c                             0x00000000   Number         0  modbus.o ABSOLUTE
    app\modbus_func.c                        0x00000000   Number         0  modbus_func.o ABSOLUTE
    app\pub_var.c                            0x00000000   Number         0  pub_var.o ABSOLUTE
    app\stepper_motor.c                      0x00000000   Number         0  stepper_motor.o ABSOLUTE
    app\util.c                               0x00000000   Number         0  util.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    driver\\gpio.c                           0x00000000   Number         0  gpio.o ABSOLUTE
    driver\\i2c.c                            0x00000000   Number         0  i2c.o ABSOLUTE
    driver\\timer.c                          0x00000000   Number         0  timer.o ABSOLUTE
    driver\\uart.c                           0x00000000   Number         0  uart.o ABSOLUTE
    driver\gpio.c                            0x00000000   Number         0  gpio.o ABSOLUTE
    driver\i2c.c                             0x00000000   Number         0  i2c.o ABSOLUTE
    driver\timer.c                           0x00000000   Number         0  timer.o ABSOLUTE
    driver\uart.c                            0x00000000   Number         0  uart.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_dma.c          0x00000000   Number         0  stm32f0xx_dma.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_gpio.c         0x00000000   Number         0  stm32f0xx_gpio.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_i2c.c          0x00000000   Number         0  stm32f0xx_i2c.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_misc.c         0x00000000   Number         0  stm32f0xx_misc.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_rcc.c          0x00000000   Number         0  stm32f0xx_rcc.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_tim.c          0x00000000   Number         0  stm32f0xx_tim.o ABSOLUTE
    stm32_lib\\src\\stm32f0xx_usart.c        0x00000000   Number         0  stm32f0xx_usart.o ABSOLUTE
    stm32_lib\src\stm32f0xx_dma.c            0x00000000   Number         0  stm32f0xx_dma.o ABSOLUTE
    stm32_lib\src\stm32f0xx_gpio.c           0x00000000   Number         0  stm32f0xx_gpio.o ABSOLUTE
    stm32_lib\src\stm32f0xx_i2c.c            0x00000000   Number         0  stm32f0xx_i2c.o ABSOLUTE
    stm32_lib\src\stm32f0xx_misc.c           0x00000000   Number         0  stm32f0xx_misc.o ABSOLUTE
    stm32_lib\src\stm32f0xx_rcc.c            0x00000000   Number         0  stm32f0xx_rcc.o ABSOLUTE
    stm32_lib\src\stm32f0xx_tim.c            0x00000000   Number         0  stm32f0xx_tim.o ABSOLUTE
    stm32_lib\src\stm32f0xx_usart.c          0x00000000   Number         0  stm32f0xx_usart.o ABSOLUTE
    RESET                                    0x08000000   Section      180  startup_stm32f030x8.o(RESET)
    !!!main                                  0x080000b4   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000bc   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x080000f8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000114   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000116   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000116   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000118   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800011a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800011a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800011a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800011a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800011a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800011a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800011a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800011c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800011c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800011c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000122   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800012a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800012e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800012e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000136   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000138   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000138   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800013c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000144   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x0800017c   Section       56  startup_stm32f030x8.o(.text)
    .text                                    0x080001b4   Section      152  irq_cm0.o(.text)
    .text                                    0x0800024c   Section        0  rt_memcpy.o(.text)
    .text                                    0x080002ce   Section        0  aeabi_memset4.o(.text)
    .text                                    0x080002e0   Section        0  rt_memclr.o(.text)
    .text                                    0x08000320   Section      488  aeabi_sdivfast.o(.text)
    .text                                    0x08000508   Section        0  heapauxi.o(.text)
    .text                                    0x0800050e   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x0800054c   Section        0  exit.o(.text)
    .text                                    0x0800055c   Section        8  libspace.o(.text)
    .text                                    0x08000564   Section        0  sys_exit.o(.text)
    .text                                    0x08000570   Section        2  use_no_semi.o(.text)
    .text                                    0x08000572   Section        0  __dczerorl2.o(.text)
    .text                                    0x08000572   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080005c8   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.2_0                             0x080005e8   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x080005ec   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    __arm_cp.8_0                             0x08000620   Number         4  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x08000624   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    __arm_cp.10_0                            0x08000678   Number         4  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x0800067c   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    __arm_cp.13_0                            0x08000738   Number         4  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x0800073c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.15_0                            0x08000768   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.15_1                            0x0800076c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08000770   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.13_0                            0x080007a4   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080007a8   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.16_0                            0x080007dc   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080007e0   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.13_0                            0x0800085c   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08000860   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.9_0                             0x08000880   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08000884   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.12_0                            0x080008a4   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x080008a8   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.7_0                             0x080008dc   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080008e0   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.10_0                            0x08000900   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08000904   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x080009a4   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000a1a   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08000a64   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000a9a   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000ad0   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000b0e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000b52   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08000b98   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.2_0                             0x08000c34   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000c38   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.3_0                             0x08000ca4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.3_1                             0x08000ca8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08000cac   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    __arm_cp.1_0                             0x08000cb4   Number         4  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x08000cb8   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    __arm_cp.5_0                             0x08000cc0   Number         4  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x08000cc4   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_0                             0x08000cec   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_1                             0x08000cf0   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_2                             0x08000cf4   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_3                             0x08000cf8   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x08000cfc   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.9_0                             0x08000d78   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000d7c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.14_0                            0x08000ea4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08000ea8   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000ec0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08000ef8   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000f10   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08000f6c   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    __arm_cp.17_0                            0x08001070   Number         4  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001074   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.6_0                             0x080010b8   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080010bc   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x080010c4   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.13_0                            0x080010e8   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.13_1                            0x080010ec   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080010f0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.12_0                            0x08001100   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08001104   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.16_0                            0x080011e8   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x080011ec   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    __arm_cp.15_0                            0x08001290   Number         4  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001294   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08001308   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0800130c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.0_0                             0x080013ac   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080013b0   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.19_0                            0x080013b8   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080013bc   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.42_0                            0x080013d8   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x080013dc   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.40_0                            0x08001410   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08001414   Section        0  rtx_thread.o(.text.osThreadSetPriority)
    __arm_cp.46_0                            0x08001434   Number         4  rtx_thread.o(.text.osThreadSetPriority)
    [Anonymous Symbol]                       0x08001438   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800144c   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.1_0                             0x080014bc   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.1_1                             0x080014c0   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x080014c4   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x080015d4   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    __arm_cp.6_0                             0x080016c0   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x080016c4   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.2_0                             0x080016cc   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x080016d0   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_0                             0x08001878   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_1                             0x0800187c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_2                             0x08001880   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08001884   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_0                             0x08001900   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_1                             0x08001904   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_2                             0x08001908   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_3                             0x0800190c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_4                             0x08001910   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001914   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.3_0                             0x08001a44   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001a48   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.3_0                             0x08001ae8   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08001aec   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.6_0                             0x08001bc0   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08001bc4   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.1_0                             0x08001c38   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08001c3c   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.4_0                             0x08001d04   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08001d08   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.32_0                            0x08001e58   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08001e5c   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.21_0                            0x08001e64   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x08001e68   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_0                            0x0800209c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_1                            0x080020a0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_2                            0x080020a4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_3                            0x080020a8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_4                            0x080020ac   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080020b0   Section        0  rtx_thread.o(.text.svcRtxThreadSetPriority)
    __arm_cp.25_0                            0x080021c4   Number         4  rtx_thread.o(.text.svcRtxThreadSetPriority)
    i.DMA1_Channel2_3_IRQHandler             0x080021c8   Section        0  uart.o(i.DMA1_Channel2_3_IRQHandler)
    i.DMA1_Channel4_5_IRQHandler             0x080021fc   Section        0  uart.o(i.DMA1_Channel4_5_IRQHandler)
    i.DMA_ClearFlag                          0x08002234   Section        0  stm32f0xx_dma.o(i.DMA_ClearFlag)
    i.DMA_ClearITPendingBit                  0x08002254   Section        0  stm32f0xx_dma.o(i.DMA_ClearITPendingBit)
    i.DMA_Cmd                                0x08002274   Section        0  stm32f0xx_dma.o(i.DMA_Cmd)
    i.DMA_DeInit                             0x08002290   Section        0  stm32f0xx_dma.o(i.DMA_DeInit)
    i.DMA_GetFlagStatus                      0x080023f4   Section        0  stm32f0xx_dma.o(i.DMA_GetFlagStatus)
    i.DMA_ITConfig                           0x08002428   Section        0  stm32f0xx_dma.o(i.DMA_ITConfig)
    i.DMA_Init                               0x0800243c   Section        0  stm32f0xx_dma.o(i.DMA_Init)
    i.GPIO_Init                              0x0800247c   Section        0  stm32f0xx_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x0800250c   Section        0  stm32f0xx_gpio.o(i.GPIO_PinAFConfig)
    i.I2C1_IRQHandler                        0x08002550   Section        0  i2c.o(i.I2C1_IRQHandler)
    i.NVIC_Init                              0x0800272c   Section        0  stm32f0xx_misc.o(i.NVIC_Init)
    i.RCC_GetClocksFreq                      0x0800279c   Section        0  stm32f0xx_rcc.o(i.RCC_GetClocksFreq)
    i.SystemCoreClockUpdate                  0x080029e4   Section        0  system_stm32f0xx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08002a98   Section        0  system_stm32f0xx.o(i.SystemInit)
    i.TIM6_IRQHandler                        0x08002b90   Section        0  timer.o(i.TIM6_IRQHandler)
    i.USART1_IRQHandler                      0x08002bec   Section        0  uart.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x08002c98   Section        0  uart.o(i.USART2_IRQHandler)
    i.USART_ClearFlag                        0x08002d44   Section        0  stm32f0xx_usart.o(i.USART_ClearFlag)
    i.USART_ClearITPendingBit                0x08002d48   Section        0  stm32f0xx_usart.o(i.USART_ClearITPendingBit)
    i.USART_DMACmd                           0x08002d5a   Section        0  stm32f0xx_usart.o(i.USART_DMACmd)
    i.USART_GetITStatus                      0x08002d6e   Section        0  stm32f0xx_usart.o(i.USART_GetITStatus)
    i.USART_ITConfig                         0x08002dbc   Section        0  stm32f0xx_usart.o(i.USART_ITConfig)
    i.USART_Init                             0x08002e00   Section        0  stm32f0xx_usart.o(i.USART_Init)
    i.USART_ReceiverTimeOutCmd               0x08002ef8   Section        0  stm32f0xx_usart.o(i.USART_ReceiverTimeOutCmd)
    i.USART_SetReceiverTimeOut               0x08002f14   Section        0  stm32f0xx_usart.o(i.USART_SetReceiverTimeOut)
    i.__ARM_common_switch8                   0x08002f24   Section        0  modbus_func.o(i.__ARM_common_switch8)
    i.__NVIC_SetPriority                     0x08002f40   Section        0  i2c.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08002f41   Thumb Code   110  i2c.o(i.__NVIC_SetPriority)
    i.__NVIC_SetPriority                     0x08002fb8   Section        0  timer.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08002fb9   Thumb Code   110  timer.o(i.__NVIC_SetPriority)
    i._mutex_acquire                         0x08003030   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x08003031   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x08003048   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x08003049   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x08003054   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x08003055   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x08003076   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x08003077   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x0800308a   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.checkCrc16                             0x08003094   Section        0  modbus.o(i.checkCrc16)
    i.crc16                                  0x080030f8   Section        0  modbus.o(i.crc16)
    i.i2c_master_process                     0x0800314c   Section        0  i2c.o(i.i2c_master_process)
    i.initGpio                               0x08003220   Section        0  gpio.o(i.initGpio)
    i.initI2C                                0x08003318   Section        0  i2c.o(i.initI2C)
    i.initTimers                             0x080033b8   Section        0  timer.o(i.initTimers)
    i.initUart1                              0x08003430   Section        0  uart.o(i.initUart1)
    i.initUartDma                            0x080034b0   Section        0  uart.o(i.initUartDma)
    i.init_HDC1080                           0x08003650   Section        0  hdc1080.o(i.init_HDC1080)
    i.main                                   0x08003684   Section        0  main.o(i.main)
    i.mbReturnException                      0x0800372c   Section        0  modbus.o(i.mbReturnException)
    i.modbusRTU                              0x08003768   Section        0  modbus.o(i.modbusRTU)
    i.osRtxErrorNotify                       0x0800395c   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x0800397c   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x08003980   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08003981   Thumb Code    34  rtx_lib.o(i.os_kernel_is_active)
    i.readCoils                              0x080039a8   Section        0  modbus_func.o(i.readCoils)
    i.readGpioInputs                         0x08003a04   Section        0  gpio.o(i.readGpioInputs)
    i.readGpioOutputs                        0x08003a18   Section        0  gpio.o(i.readGpioOutputs)
    i.readHoldingRegister                    0x08003a2c   Section        0  modbus_func.o(i.readHoldingRegister)
    i.readInputs                             0x08003b1c   Section        0  modbus_func.o(i.readInputs)
    i.rwDummyFunc                            0x08003b7c   Section        0  modbus_func.o(i.rwDummyFunc)
    i.setGpioOutputs                         0x08003b80   Section        0  gpio.o(i.setGpioOutputs)
    i.setParameters                          0x08003bc0   Section        0  pub_var.o(i.setParameters)
    i.task_HDC1080                           0x08003be4   Section        0  hdc1080.o(i.task_HDC1080)
    i.task_Led                               0x08003cf0   Section        0  main.o(i.task_Led)
    i.task_Uart1                             0x08003d18   Section        0  uart.o(i.task_Uart1)
    i.task_stepper_motor                     0x08003de0   Section        0  stepper_motor.o(i.task_stepper_motor)
    i.trig_HDC1080                           0x08004134   Section        0  hdc1080.o(i.trig_HDC1080)
    i.uart1TxCmd                             0x080041e4   Section        0  uart.o(i.uart1TxCmd)
    i.uartNvicConfig                         0x08004264   Section        0  uart.o(i.uartNvicConfig)
    i.wordEndianer                           0x080042ac   Section        0  util.o(i.wordEndianer)
    i.writeSingleCoil                        0x080042bc   Section        0  modbus_func.o(i.writeSingleCoil)
    i.write_HDC1080_configuration            0x080043a0   Section        0  hdc1080.o(i.write_HDC1080_configuration)
    .constdata                               0x08004448   Section      518  modbus.o(.constdata)
    .constdata                               0x08004650   Section       50  modbus_func.o(.constdata)
    .constdata                               0x08004684   Section       32  stepper_motor.o(.constdata)
    .constdata                               0x080046a4   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x080046a4   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x080046c8   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x080046ec   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08004708   Section       16  system_stm32f0xx.o(.constdata)
    .constdata                               0x08004718   Section        1  irq_cm0.o(.constdata)
    .rodata                                  0x0800471c   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x0800471c   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08004784   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08004784   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4656  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200014d0   Section        8  main.o(.data)
    .data                                    0x200014d8   Section       12  hdc1080.o(.data)
    .data                                    0x200014e4   Section        2  modbus.o(.data)
    .data                                    0x200014e8   Section       24  modbus_func.o(.data)
    .data                                    0x20001500   Section        1  stepper_motor.o(.data)
    .data                                    0x20001504   Section       12  gpio.o(.data)
    .data                                    0x20001510   Section      148  uart.o(.data)
    .data                                    0x200015a4   Section       18  i2c.o(.data)
    .data                                    0x200015b6   Section       16  stm32f0xx_rcc.o(.data)
    APBAHBPrescTable                         0x200015b6   Data          16  stm32f0xx_rcc.o(.data)
    .data                                    0x200015c8   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x200015cc   Data           1  rtx_lib.o(.data)
    .data                                    0x200015d0   Section        4  system_stm32f0xx.o(.data)
    .bss                                     0x20001680   Section       10  pub_var.o(.bss)
    .bss                                     0x2000168c   Section       12  modbus.o(.bss)
    .bss                                     0x20001698   Section       16  stepper_motor.o(.bss)
    .bss                                     0x200016a8   Section      272  uart.o(.bss)
    .bss                                     0x200017b8   Section       64  i2c.o(.bss)
    .bss                                     0x200017f8   Section       96  libspace.o(.bss)
    HEAP                                     0x20001858   Section      512  startup_stm32f030x8.o(HEAP)
    Heap_Mem                                 0x20001858   Data         512  startup_stm32f030x8.o(HEAP)
    STACK                                    0x20001a58   Section     1280  startup_stm32f030x8.o(STACK)
    Stack_Mem                                0x20001a58   Data        1280  startup_stm32f030x8.o(STACK)
    __initial_sp                             0x20001f58   Data           0  startup_stm32f030x8.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000b4   Number         0  startup_stm32f030x8.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f030x8.o(RESET)
    __Vectors_End                            0x080000b4   Data           0  startup_stm32f030x8.o(RESET)
    __main                                   0x080000b5   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000bd   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000cd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x080000f9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000115   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000117   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000119   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800011b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800011d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800011d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800011d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000123   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800012b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000137   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000139   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000139   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800013d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000145   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000145   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x0800017d   Thumb Code     8  startup_stm32f030x8.o(.text)
    NMI_Handler                              0x08000185   Thumb Code     2  startup_stm32f030x8.o(.text)
    HardFault_Handler                        0x08000187   Thumb Code     2  startup_stm32f030x8.o(.text)
    ADC1_IRQHandler                          0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    EXTI0_1_IRQHandler                       0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    EXTI2_3_IRQHandler                       0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    EXTI4_15_IRQHandler                      0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    FLASH_IRQHandler                         0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    I2C2_IRQHandler                          0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    RCC_IRQHandler                           0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    RTC_IRQHandler                           0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    SPI1_IRQHandler                          0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    SPI2_IRQHandler                          0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM14_IRQHandler                         0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM15_IRQHandler                         0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM16_IRQHandler                         0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM17_IRQHandler                         0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM1_CC_IRQHandler                       0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    TIM3_IRQHandler                          0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    WWDG_IRQHandler                          0x0800018f   Thumb Code     0  startup_stm32f030x8.o(.text)
    __user_initial_stackheap                 0x08000191   Thumb Code     0  startup_stm32f030x8.o(.text)
    SVC_Handler                              0x080001b5   Thumb Code   120  irq_cm0.o(.text)
    PendSV_Handler                           0x0800022d   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x08000239   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_memcpy                           0x0800024d   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x0800024d   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_memset4                          0x080002cf   Thumb Code    18  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080002cf   Thumb Code     0  aeabi_memset4.o(.text)
    _memset_w                                0x080002e1   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x080002fb   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x08000319   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x08000319   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0800031d   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x0800031d   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x0800031d   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x08000321   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_uidivmod                         0x08000321   Thumb Code    28  aeabi_sdivfast.o(.text)
    __aeabi_idiv                             0x0800033d   Thumb Code     0  aeabi_sdivfast.o(.text)
    __aeabi_idivmod                          0x0800033d   Thumb Code   460  aeabi_sdivfast.o(.text)
    __use_two_region_memory                  0x08000509   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800050b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800050d   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x0800050f   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x0800054d   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x0800055d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0800055d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000565   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000571   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000571   Thumb Code     2  use_no_semi.o(.text)
    __decompress                             0x08000573   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08000573   Thumb Code    86  __dczerorl2.o(.text)
    __semihosting_library_function           0x08000573   Thumb Code     0  indicate_semi.o(.text)
    osDelay                                  0x080005c9   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osEventFlagsNew                          0x080005ed   Thumb Code    56  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x08000625   Thumb Code    88  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x0800067d   Thumb Code   192  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x0800073d   Thumb Code    52  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x08000771   Thumb Code    56  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080007a9   Thumb Code    56  rtx_kernel.o(.text.osKernelStart)
    osMessageQueuePut                        0x080007e1   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08000861   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08000885   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x080008a9   Thumb Code    56  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080008e1   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxEventFlagsPostProcess               0x08000905   Thumb Code   160  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    osRtxMemoryAlloc                         0x080009a5   Thumb Code   118  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08000a1b   Thumb Code    74  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08000a65   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000a9b   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000ad1   Thumb Code    62  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000b0f   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08000b53   Thumb Code    70  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08000b99   Thumb Code   160  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000c39   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxSysTimerAckIRQ                      0x08000cad   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08000cb9   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x08000cc5   Thumb Code    56  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x08000cfd   Thumb Code   128  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000d7d   Thumb Code   300  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000ea9   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000ec1   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08000ef9   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08000f11   Thumb Code    92  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08000f6d   Thumb Code   264  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x08001075   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080010bd   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x080010c5   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x080010f1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08001105   Thumb Code   232  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x080011ed   Thumb Code   168  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001295   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerTick                           0x0800130d   Thumb Code   164  rtx_timer.o(.text.osRtxTimerTick)
    osThreadExit                             0x080013b1   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x080013bd   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x080013dd   Thumb Code    56  rtx_thread.o(.text.osThreadNew)
    osThreadSetPriority                      0x08001415   Thumb Code    36  rtx_thread.o(.text.osThreadSetPriority)
    svcRtxDelay                              0x08001439   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    svcRtxEventFlagsNew                      0x0800144d   Thumb Code   120  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsSet                      0x080014c5   Thumb Code   272  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsWait                     0x080015d5   Thumb Code   240  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxKernelGetState                     0x080016c5   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x080016d1   Thumb Code   436  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08001885   Thumb Code   144  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueuePut                    0x08001915   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08001a49   Thumb Code   164  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08001aed   Thumb Code   216  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08001bc5   Thumb Code   120  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08001c3d   Thumb Code   204  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08001d09   Thumb Code   340  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x08001e5d   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x08001e69   Thumb Code   584  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadSetPriority                  0x080020b1   Thumb Code   280  rtx_thread.o(.text.svcRtxThreadSetPriority)
    DMA1_Channel2_3_IRQHandler               0x080021c9   Thumb Code    44  uart.o(i.DMA1_Channel2_3_IRQHandler)
    DMA1_Channel4_5_IRQHandler               0x080021fd   Thumb Code    48  uart.o(i.DMA1_Channel4_5_IRQHandler)
    DMA_ClearFlag                            0x08002235   Thumb Code    22  stm32f0xx_dma.o(i.DMA_ClearFlag)
    DMA_ClearITPendingBit                    0x08002255   Thumb Code    22  stm32f0xx_dma.o(i.DMA_ClearITPendingBit)
    DMA_Cmd                                  0x08002275   Thumb Code    24  stm32f0xx_dma.o(i.DMA_Cmd)
    DMA_DeInit                               0x08002291   Thumb Code   342  stm32f0xx_dma.o(i.DMA_DeInit)
    DMA_GetFlagStatus                        0x080023f5   Thumb Code    42  stm32f0xx_dma.o(i.DMA_GetFlagStatus)
    DMA_ITConfig                             0x08002429   Thumb Code    20  stm32f0xx_dma.o(i.DMA_ITConfig)
    DMA_Init                                 0x0800243d   Thumb Code    58  stm32f0xx_dma.o(i.DMA_Init)
    GPIO_Init                                0x0800247d   Thumb Code   144  stm32f0xx_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x0800250d   Thumb Code    68  stm32f0xx_gpio.o(i.GPIO_PinAFConfig)
    I2C1_IRQHandler                          0x08002551   Thumb Code   438  i2c.o(i.I2C1_IRQHandler)
    NVIC_Init                                0x0800272d   Thumb Code   106  stm32f0xx_misc.o(i.NVIC_Init)
    RCC_GetClocksFreq                        0x0800279d   Thumb Code   554  stm32f0xx_rcc.o(i.RCC_GetClocksFreq)
    SystemCoreClockUpdate                    0x080029e5   Thumb Code   158  system_stm32f0xx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08002a99   Thumb Code   228  system_stm32f0xx.o(i.SystemInit)
    TIM6_IRQHandler                          0x08002b91   Thumb Code    70  timer.o(i.TIM6_IRQHandler)
    USART1_IRQHandler                        0x08002bed   Thumb Code   148  uart.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x08002c99   Thumb Code   148  uart.o(i.USART2_IRQHandler)
    USART_ClearFlag                          0x08002d45   Thumb Code     4  stm32f0xx_usart.o(i.USART_ClearFlag)
    USART_ClearITPendingBit                  0x08002d49   Thumb Code    18  stm32f0xx_usart.o(i.USART_ClearITPendingBit)
    USART_DMACmd                             0x08002d5b   Thumb Code    20  stm32f0xx_usart.o(i.USART_DMACmd)
    USART_GetITStatus                        0x08002d6f   Thumb Code    78  stm32f0xx_usart.o(i.USART_GetITStatus)
    USART_ITConfig                           0x08002dbd   Thumb Code    66  stm32f0xx_usart.o(i.USART_ITConfig)
    USART_Init                               0x08002e01   Thumb Code   226  stm32f0xx_usart.o(i.USART_Init)
    USART_ReceiverTimeOutCmd                 0x08002ef9   Thumb Code    28  stm32f0xx_usart.o(i.USART_ReceiverTimeOutCmd)
    USART_SetReceiverTimeOut                 0x08002f15   Thumb Code    16  stm32f0xx_usart.o(i.USART_SetReceiverTimeOut)
    __ARM_common_switch8                     0x08002f25   Thumb Code    28  modbus_func.o(i.__ARM_common_switch8)
    _mutex_acquire                           0x08003031   Thumb Code    24  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x08003049   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x08003055   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x08003077   Thumb Code    20  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x0800308b   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    checkCrc16                               0x08003095   Thumb Code    92  modbus.o(i.checkCrc16)
    crc16                                    0x080030f9   Thumb Code    76  modbus.o(i.crc16)
    i2c_master_process                       0x0800314d   Thumb Code   170  i2c.o(i.i2c_master_process)
    initGpio                                 0x08003221   Thumb Code   232  gpio.o(i.initGpio)
    initI2C                                  0x08003319   Thumb Code   138  i2c.o(i.initI2C)
    initTimers                               0x080033b9   Thumb Code   104  timer.o(i.initTimers)
    initUart1                                0x08003431   Thumb Code   114  uart.o(i.initUart1)
    initUartDma                              0x080034b1   Thumb Code   378  uart.o(i.initUartDma)
    init_HDC1080                             0x08003651   Thumb Code    44  hdc1080.o(i.init_HDC1080)
    main                                     0x08003685   Thumb Code   136  main.o(i.main)
    mbReturnException                        0x0800372d   Thumb Code    54  modbus.o(i.mbReturnException)
    modbusRTU                                0x08003769   Thumb Code   488  modbus.o(i.modbusRTU)
    osRtxErrorNotify                         0x0800395d   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x0800397d   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    readCoils                                0x080039a9   Thumb Code    80  modbus_func.o(i.readCoils)
    readGpioInputs                           0x08003a05   Thumb Code    14  gpio.o(i.readGpioInputs)
    readGpioOutputs                          0x08003a19   Thumb Code    12  gpio.o(i.readGpioOutputs)
    readHoldingRegister                      0x08003a2d   Thumb Code   218  modbus_func.o(i.readHoldingRegister)
    readInputs                               0x08003b1d   Thumb Code    82  modbus_func.o(i.readInputs)
    rwDummyFunc                              0x08003b7d   Thumb Code     4  modbus_func.o(i.rwDummyFunc)
    setGpioOutputs                           0x08003b81   Thumb Code    50  gpio.o(i.setGpioOutputs)
    setParameters                            0x08003bc1   Thumb Code    30  pub_var.o(i.setParameters)
    task_HDC1080                             0x08003be5   Thumb Code   230  hdc1080.o(i.task_HDC1080)
    task_Led                                 0x08003cf1   Thumb Code    36  main.o(i.task_Led)
    task_Uart1                               0x08003d19   Thumb Code   178  uart.o(i.task_Uart1)
    task_stepper_motor                       0x08003de1   Thumb Code   808  stepper_motor.o(i.task_stepper_motor)
    trig_HDC1080                             0x08004135   Thumb Code   142  hdc1080.o(i.trig_HDC1080)
    uart1TxCmd                               0x080041e5   Thumb Code   112  uart.o(i.uart1TxCmd)
    uartNvicConfig                           0x08004265   Thumb Code    72  uart.o(i.uartNvicConfig)
    wordEndianer                             0x080042ad   Thumb Code    16  util.o(i.wordEndianer)
    writeSingleCoil                          0x080042bd   Thumb Code   214  modbus_func.o(i.writeSingleCoil)
    write_HDC1080_configuration              0x080043a1   Thumb Code   140  hdc1080.o(i.write_HDC1080_configuration)
    stCrcTable                               0x08004448   Data         512  modbus.o(.constdata)
    stHoldingRegArray                        0x08004650   Data          48  modbus_func.o(.constdata)
    sizeOfHoldingRegister                    0x08004680   Data           2  modbus_func.o(.constdata)
    step_array_full                          0x08004684   Data           4  stepper_motor.o(.constdata)
    ucShift                                  0x08004688   Data           2  stepper_motor.o(.constdata)
    ulStepperEn                              0x0800468c   Data           8  stepper_motor.o(.constdata)
    ulStepperMask                            0x08004694   Data           8  stepper_motor.o(.constdata)
    ulSwitchMask                             0x0800469c   Data           8  stepper_motor.o(.constdata)
    osRtxUserSVC                             0x08004704   Data           4  rtx_lib.o(.constdata)
    AHBPrescTable                            0x08004708   Data          16  system_stm32f0xx.o(.constdata)
    irqRtxLib                                0x08004718   Data           1  irq_cm0.o(.constdata)
    osRtxConfig                              0x0800471c   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08004790   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080047b0   Number         0  anon$$obj.o(Region$$Table)
    mutex_I2C                                0x200014d0   Data           4  main.o(.data)
    event_general                            0x200014d4   Data           4  main.o(.data)
    stTempHum                                0x200014d8   Data           4  hdc1080.o(.data)
    stHDC1080Status                          0x200014dc   Data           1  hdc1080.o(.data)
    uiTimerHDC1080                           0x200014de   Data           2  hdc1080.o(.data)
    statusT                                  0x200014e0   Data           4  hdc1080.o(.data)
    uiWordQty                                0x200014e4   Data           2  modbus.o(.data)
    ulMfTmp                                  0x200014e8   Data           4  modbus_func.o(.data)
    uiMfTmp                                  0x200014ec   Data           2  modbus_func.o(.data)
    ptruInt                                  0x200014f0   Data           4  modbus_func.o(.data)
    uistMfTmp                                0x200014f4   Data           2  modbus_func.o(.data)
    ptruChar                                 0x200014f8   Data           4  modbus_func.o(.data)
    ulPar1                                   0x200014fc   Data           4  modbus_func.o(.data)
    active_motor                             0x20001500   Data           1  stepper_motor.o(.data)
    ulInputs                                 0x20001504   Data           4  gpio.o(.data)
    ulOutputs                                0x20001508   Data           4  gpio.o(.data)
    ulTmp                                    0x2000150c   Data           4  gpio.o(.data)
    uart1Tx                                  0x20001510   Data          66  uart.o(.data)
    uart1Flags                               0x20001552   Data           5  uart.o(.data)
    uiTmp                                    0x20001557   Data           1  uart.o(.data)
    uiTimerUart1                             0x20001558   Data           2  uart.o(.data)
    uart2Tx                                  0x2000155a   Data          66  uart.o(.data)
    uart2Flags                               0x2000159c   Data           5  uart.o(.data)
    uiTimerUart2                             0x200015a2   Data           2  uart.o(.data)
    i2cTxBufPtr                              0x200015a4   Data           4  i2c.o(.data)
    i2cRxBufPtr                              0x200015a8   Data           4  i2c.o(.data)
    stI2cMsgTx                               0x200015ac   Data           2  i2c.o(.data)
    stI2cStatus                              0x200015ae   Data           1  i2c.o(.data)
    ucI2CMasterSendStartStop                 0x200015af   Data           1  i2c.o(.data)
    ulTempI2C                                0x200015b0   Data           4  i2c.o(.data)
    uiTimerI2C                               0x200015b4   Data           2  i2c.o(.data)
    irqRtxLibRef                             0x200015c8   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x200015d0   Data           4  system_stm32f0xx.o(.data)
    osRtxInfo                                0x200015d8   Data         168  rtx_kernel.o(.data.os)
    sys_par                                  0x20001680   Data          10  pub_var.o(.bss)
    mbTxRxData                               0x2000168c   Data          12  modbus.o(.bss)
    motor_s                                  0x20001698   Data          16  stepper_motor.o(.bss)
    uart1Rx                                  0x200016a8   Data         136  uart.o(.bss)
    uart2Rx                                  0x20001730   Data         136  uart.o(.bss)
    ucI2CTxBuf                               0x200017b8   Data          32  i2c.o(.bss)
    ucI2CRxBuf                               0x200017d8   Data          32  i2c.o(.bss)
    __libspace_start                         0x200017f8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20001858   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000b5

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00005e30, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00004820])

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x000047b0, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000b4   Data   RO         2389    RESET               startup_stm32f030x8.o
    0x080000b4   0x00000008   Code   RO         2965  * !!!main             c_p.l(__main.o)
    0x080000bc   0x0000003c   Code   RO         3145    !!!scatter          c_p.l(__scatter.o)
    0x080000f8   0x0000001c   Code   RO         3147    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000114   0x00000002   Code   RO         3012    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x08000116   0x00000000   Code   RO         3026    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3028    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3031    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3033    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3035    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3038    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3040    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3042    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3044    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3046    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3048    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3050    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3052    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3054    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3056    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3058    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3062    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3064    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3066    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x08000116   0x00000000   Code   RO         3068    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x08000116   0x00000002   Code   RO         3069    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x08000118   0x00000002   Code   RO         3100    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x0800011a   0x00000000   Code   RO         3126    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x0800011a   0x00000000   Code   RO         3128    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x0800011a   0x00000000   Code   RO         3131    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x0800011a   0x00000000   Code   RO         3134    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x0800011a   0x00000000   Code   RO         3136    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x0800011a   0x00000000   Code   RO         3139    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x0800011a   0x00000002   Code   RO         3140    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x0800011c   0x00000000   Code   RO         2967    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x0800011c   0x00000000   Code   RO         2982    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x0800011c   0x00000006   Code   RO         2994    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x08000122   0x00000008   Code   RO         2983    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x0800012a   0x00000004   Code   RO         2985    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0800012e   0x00000000   Code   RO         2987    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0800012e   0x00000008   Code   RO         2988    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000136   0x00000002   Code   RO         3017    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000138   0x00000000   Code   RO         3073    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000138   0x00000004   Code   RO         3074    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0800013c   0x00000006   Code   RO         3075    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000142   0x00000002   PAD
    0x08000144   0x00000038   Code   RO         2951    .emb_text           c_p.l(rt_memcpy.o)
    0x0800017c   0x00000038   Code   RO         2390    .text               startup_stm32f030x8.o
    0x080001b4   0x00000098   Code   RO         2722    .text               RTX_CM0.lib(irq_cm0.o)
    0x0800024c   0x00000082   Code   RO         2952    .text               c_p.l(rt_memcpy.o)
    0x080002ce   0x00000012   Code   RO         2955    .text               c_p.l(aeabi_memset4.o)
    0x080002e0   0x00000040   Code   RO         2957    .text               c_p.l(rt_memclr.o)
    0x08000320   0x000001e8   Code   RO         2959    .text               c_p.l(aeabi_sdivfast.o)
    0x08000508   0x00000006   Code   RO         2963    .text               c_p.l(heapauxi.o)
    0x0800050e   0x0000003e   Code   RO         3000    .text               c_p.l(sys_stackheap_outer.o)
    0x0800054c   0x00000010   Code   RO         3003    .text               c_p.l(exit.o)
    0x0800055c   0x00000008   Code   RO         3013    .text               c_p.l(libspace.o)
    0x08000564   0x0000000c   Code   RO         3070    .text               c_p.l(sys_exit.o)
    0x08000570   0x00000002   Code   RO         3089    .text               c_p.l(use_no_semi.o)
    0x08000572   0x00000000   Code   RO         3091    .text               c_p.l(indicate_semi.o)
    0x08000572   0x00000056   Code   RO         3143    .text               c_p.l(__dczerorl2.o)
    0x080005c8   0x00000024   Code   RO         2629    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x080005ec   0x00000038   Code   RO         2660    .text.osEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x08000624   0x00000058   Code   RO         2664    .text.osEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x0800067c   0x000000c0   Code   RO         2670    .text.osEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x0800073c   0x00000034   Code   RO         2458    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x08000770   0x00000038   Code   RO         2454    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x080007a8   0x00000038   Code   RO         2460    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x080007e0   0x00000080   Code   RO         2893    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08000860   0x00000024   Code   RO         2703    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x08000884   0x00000024   Code   RO         2709    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x080008a8   0x00000038   Code   RO         2699    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x080008e0   0x00000024   Code   RO         2705    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x08000904   0x000000a0   Code   RO         2644    .text.osRtxEventFlagsPostProcess  RTX_CM0.lib(rtx_evflags.o)
    0x080009a4   0x00000076   Code   RO         2768    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x08000a1a   0x0000004a   Code   RO         2770    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x08000a64   0x00000036   Code   RO         2766    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x08000a9a   0x00000036   Code   RO         2785    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x08000ad0   0x0000003e   Code   RO         2787    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x08000b0e   0x00000044   Code   RO         2783    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x08000b52   0x00000046   Code   RO         2685    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x08000b98   0x000000a0   Code   RO         2842    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x08000c38   0x00000074   Code   RO         2844    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x08000cac   0x0000000c   Code   RO         2840    .text.osRtxSysTimerAckIRQ  RTX_CM0.lib(rtx_system.o)
    0x08000cb8   0x0000000c   Code   RO         2848    .text.osRtxSysTimerEnable  RTX_CM0.lib(rtx_system.o)
    0x08000cc4   0x00000038   Code   RO         2846    .text.osRtxSysTimerSetup  RTX_CM0.lib(rtx_system.o)
    0x08000cfc   0x00000080   Code   RO         2512    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x08000d7c   0x0000012c   Code   RO         2522    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x08000ea8   0x00000018   Code   RO         2496    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x08000ec0   0x00000038   Code   RO         2494    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x08000ef8   0x00000018   Code   RO         2502    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x08000f10   0x0000005c   Code   RO         2500    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x08000f6c   0x00000108   Code   RO         2528    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x08001074   0x00000048   Code   RO         2506    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x080010bc   0x00000006   Code   RO         2514    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x080010c2   0x00000002   PAD
    0x080010c4   0x0000002c   Code   RO         2520    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x080010f0   0x00000014   Code   RO         2518    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x08001104   0x000000e8   Code   RO         2526    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x080011ec   0x000000a8   Code   RO         2524    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x08001294   0x00000078   Code   RO         2838    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x0800130c   0x000000a4   Code   RO         2727    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x080013b0   0x0000000c   Code   RO         2532    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x080013bc   0x00000020   Code   RO         2578    .text.osThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x080013dc   0x00000038   Code   RO         2574    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x08001414   0x00000024   Code   RO         2586    .text.osThreadSetPriority  RTX_CM0.lib(rtx_thread.o)
    0x08001438   0x00000012   Code   RO         2625    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x0800144a   0x00000002   PAD
    0x0800144c   0x00000078   Code   RO         2646    .text.svcRtxEventFlagsNew  RTX_CM0.lib(rtx_evflags.o)
    0x080014c4   0x00000110   Code   RO         2650    .text.svcRtxEventFlagsSet  RTX_CM0.lib(rtx_evflags.o)
    0x080015d4   0x000000f0   Code   RO         2656    .text.svcRtxEventFlagsWait  RTX_CM0.lib(rtx_evflags.o)
    0x080016c4   0x0000000c   Code   RO         2432    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x080016d0   0x000001b4   Code   RO         2428    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x08001884   0x00000090   Code   RO         2434    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08001914   0x00000134   Code   RO         2873    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08001a48   0x000000a4   Code   RO         2691    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x08001aec   0x000000d8   Code   RO         2697    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x08001bc4   0x00000078   Code   RO         2687    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x08001c3c   0x000000cc   Code   RO         2693    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x08001d08   0x00000154   Code   RO         2558    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x08001e5c   0x0000000c   Code   RO         2536    .text.svcRtxThreadGetId  RTX_CM0.lib(rtx_thread.o)
    0x08001e68   0x00000248   Code   RO         2530    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x080020b0   0x00000118   Code   RO         2544    .text.svcRtxThreadSetPriority  RTX_CM0.lib(rtx_thread.o)
    0x080021c8   0x00000034   Code   RO         1263    i.DMA1_Channel2_3_IRQHandler  uart.o
    0x080021fc   0x00000038   Code   RO         1264    i.DMA1_Channel4_5_IRQHandler  uart.o
    0x08002234   0x00000020   Code   RO          432    i.DMA_ClearFlag     stm32f0xx_dma.o
    0x08002254   0x00000020   Code   RO          433    i.DMA_ClearITPendingBit  stm32f0xx_dma.o
    0x08002274   0x0000001c   Code   RO          434    i.DMA_Cmd           stm32f0xx_dma.o
    0x08002290   0x00000164   Code   RO          435    i.DMA_DeInit        stm32f0xx_dma.o
    0x080023f4   0x00000034   Code   RO          437    i.DMA_GetFlagStatus  stm32f0xx_dma.o
    0x08002428   0x00000014   Code   RO          439    i.DMA_ITConfig      stm32f0xx_dma.o
    0x0800243c   0x00000040   Code   RO          440    i.DMA_Init          stm32f0xx_dma.o
    0x0800247c   0x00000090   Code   RO          519    i.GPIO_Init         stm32f0xx_gpio.o
    0x0800250c   0x00000044   Code   RO          520    i.GPIO_PinAFConfig  stm32f0xx_gpio.o
    0x08002550   0x000001dc   Code   RO         1368    i.I2C1_IRQHandler   i2c.o
    0x0800272c   0x00000070   Code   RO          613    i.NVIC_Init         stm32f0xx_misc.o
    0x0800279c   0x00000248   Code   RO         2039    i.RCC_GetClocksFreq  stm32f0xx_rcc.o
    0x080029e4   0x000000b4   Code   RO         2396    i.SystemCoreClockUpdate  system_stm32f0xx.o
    0x08002a98   0x000000f8   Code   RO         2397    i.SystemInit        system_stm32f0xx.o
    0x08002b90   0x0000005c   Code   RO         1415    i.TIM6_IRQHandler   timer.o
    0x08002bec   0x000000ac   Code   RO         1265    i.USART1_IRQHandler  uart.o
    0x08002c98   0x000000ac   Code   RO         1266    i.USART2_IRQHandler  uart.o
    0x08002d44   0x00000004   Code   RO          648    i.USART_ClearFlag   stm32f0xx_usart.o
    0x08002d48   0x00000012   Code   RO          649    i.USART_ClearITPendingBit  stm32f0xx_usart.o
    0x08002d5a   0x00000014   Code   RO          655    i.USART_DMACmd      stm32f0xx_usart.o
    0x08002d6e   0x0000004e   Code   RO          661    i.USART_GetITStatus  stm32f0xx_usart.o
    0x08002dbc   0x00000042   Code   RO          663    i.USART_ITConfig    stm32f0xx_usart.o
    0x08002dfe   0x00000002   PAD
    0x08002e00   0x000000f8   Code   RO          664    i.USART_Init        stm32f0xx_usart.o
    0x08002ef8   0x0000001c   Code   RO          677    i.USART_ReceiverTimeOutCmd  stm32f0xx_usart.o
    0x08002f14   0x00000010   Code   RO          689    i.USART_SetReceiverTimeOut  stm32f0xx_usart.o
    0x08002f24   0x0000001c   Code   RO          360    i.__ARM_common_switch8  modbus_func.o
    0x08002f40   0x00000078   Code   RO         1369    i.__NVIC_SetPriority  i2c.o
    0x08002fb8   0x00000078   Code   RO         1416    i.__NVIC_SetPriority  timer.o
    0x08003030   0x00000018   Code   RO         2287    i._mutex_acquire    rtx_lib.o
    0x08003048   0x0000000c   Code   RO         2288    i._mutex_free       rtx_lib.o
    0x08003054   0x00000022   Code   RO         2289    i._mutex_initialize  rtx_lib.o
    0x08003076   0x00000014   Code   RO         2290    i._mutex_release    rtx_lib.o
    0x0800308a   0x00000008   Code   RO         2291    i._platform_post_stackheap_init  rtx_lib.o
    0x08003092   0x00000002   PAD
    0x08003094   0x00000064   Code   RO          240    i.checkCrc16        modbus.o
    0x080030f8   0x00000054   Code   RO          241    i.crc16             modbus.o
    0x0800314c   0x000000d4   Code   RO         1370    i.i2c_master_process  i2c.o
    0x08003220   0x000000f8   Code   RO         1219    i.initGpio          gpio.o
    0x08003318   0x000000a0   Code   RO         1371    i.initI2C           i2c.o
    0x080033b8   0x00000078   Code   RO         1417    i.initTimers        timer.o
    0x08003430   0x00000080   Code   RO         1267    i.initUart1         uart.o
    0x080034b0   0x000001a0   Code   RO         1269    i.initUartDma       uart.o
    0x08003650   0x00000034   Code   RO          186    i.init_HDC1080      hdc1080.o
    0x08003684   0x000000a8   Code   RO            3    i.main              main.o
    0x0800372c   0x0000003c   Code   RO          242    i.mbReturnException  modbus.o
    0x08003768   0x000001f4   Code   RO          243    i.modbusRTU         modbus.o
    0x0800395c   0x00000020   Code   RO         2359    i.osRtxErrorNotify  rtx_config.o
    0x0800397c   0x00000004   Code   RO         2360    i.osRtxIdleThread   rtx_config.o
    0x08003980   0x00000028   Code   RO         2292    i.os_kernel_is_active  rtx_lib.o
    0x080039a8   0x0000005c   Code   RO          317    i.readCoils         modbus_func.o
    0x08003a04   0x00000014   Code   RO         1220    i.readGpioInputs    gpio.o
    0x08003a18   0x00000014   Code   RO         1221    i.readGpioOutputs   gpio.o
    0x08003a2c   0x000000f0   Code   RO          318    i.readHoldingRegister  modbus_func.o
    0x08003b1c   0x00000060   Code   RO          319    i.readInputs        modbus_func.o
    0x08003b7c   0x00000004   Code   RO          320    i.rwDummyFunc       modbus_func.o
    0x08003b80   0x00000040   Code   RO         1222    i.setGpioOutputs    gpio.o
    0x08003bc0   0x00000024   Code   RO          133    i.setParameters     pub_var.o
    0x08003be4   0x0000010c   Code   RO          188    i.task_HDC1080      hdc1080.o
    0x08003cf0   0x00000028   Code   RO            4    i.task_Led          main.o
    0x08003d18   0x000000c8   Code   RO         1270    i.task_Uart1        uart.o
    0x08003de0   0x00000354   Code   RO          374    i.task_stepper_motor  stepper_motor.o
    0x08004134   0x000000b0   Code   RO          189    i.trig_HDC1080      hdc1080.o
    0x080041e4   0x00000080   Code   RO         1273    i.uart1TxCmd        uart.o
    0x08004264   0x00000048   Code   RO         1276    i.uartNvicConfig    uart.o
    0x080042ac   0x00000010   Code   RO          154    i.wordEndianer      util.o
    0x080042bc   0x000000e4   Code   RO          321    i.writeSingleCoil   modbus_func.o
    0x080043a0   0x000000a8   Code   RO          190    i.write_HDC1080_configuration  hdc1080.o
    0x08004448   0x00000206   Data   RO          245    .constdata          modbus.o
    0x0800464e   0x00000002   PAD
    0x08004650   0x00000032   Data   RO          322    .constdata          modbus_func.o
    0x08004682   0x00000002   PAD
    0x08004684   0x00000020   Data   RO          376    .constdata          stepper_motor.o
    0x080046a4   0x00000064   Data   RO         2298    .constdata          rtx_lib.o
    0x08004708   0x00000010   Data   RO         2398    .constdata          system_stm32f0xx.o
    0x08004718   0x00000001   Data   RO         2721    .constdata          RTX_CM0.lib(irq_cm0.o)
    0x08004719   0x00000003   PAD
    0x0800471c   0x00000068   Data   RO         2300    .rodata             rtx_lib.o
    0x08004784   0x0000000b   Data   RO         2480    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x0800478f   0x00000001   PAD
    0x08004790   0x00000020   Data   RO         3141    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00001f58, Max: 0x00002000, ABSOLUTE, COMPRESSED[0x00000070])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001230   Data   RW         2293    .bss.os             rtx_lib.o
    0x20001230   0x00000034   Data   RW         2294    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   0x00000050   Data   RW         2295    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   0x00000088   Data   RW         2296    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   0x00000004   PAD
    0x20001340   0x00000190   Data   RW         2297    .bss.os.thread.stack  rtx_lib.o
    0x200014d0   0x00000008   Data   RW            5    .data               main.o
    0x200014d8   0x0000000c   Data   RW          191    .data               hdc1080.o
    0x200014e4   0x00000002   Data   RW          246    .data               modbus.o
    0x200014e6   0x00000002   PAD
    0x200014e8   0x00000018   Data   RW          323    .data               modbus_func.o
    0x20001500   0x00000001   Data   RW          377    .data               stepper_motor.o
    0x20001501   0x00000003   PAD
    0x20001504   0x0000000c   Data   RW         1223    .data               gpio.o
    0x20001510   0x00000094   Data   RW         1278    .data               uart.o
    0x200015a4   0x00000012   Data   RW         1373    .data               i2c.o
    0x200015b6   0x00000010   Data   RW         2065    .data               stm32f0xx_rcc.o
    0x200015c6   0x00000002   PAD
    0x200015c8   0x00000005   Data   RW         2299    .data               rtx_lib.o
    0x200015cd   0x00000003   PAD
    0x200015d0   0x00000004   Data   RW         2399    .data               system_stm32f0xx.o
    0x200015d4   0x00000004   PAD
    0x200015d8   0x000000a8   Data   RW         2481    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x20001680   0x0000000a   Zero   RW          134    .bss                pub_var.o
    0x2000168a   0x00000002   PAD
    0x2000168c   0x0000000c   Zero   RW          244    .bss                modbus.o
    0x20001698   0x00000010   Zero   RW          375    .bss                stepper_motor.o
    0x200016a8   0x00000110   Zero   RW         1277    .bss                uart.o
    0x200017b8   0x00000040   Zero   RW         1372    .bss                i2c.o
    0x200017f8   0x00000060   Zero   RW         3014    .bss                c_p.l(libspace.o)
    0x20001858   0x00000200   Zero   RW         2388    HEAP                startup_stm32f030x8.o
    0x20001a58   0x00000500   Zero   RW         2387    STACK               startup_stm32f030x8.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       352         44          0         12          0       1938   gpio.o
       664        108          0         12          0       3798   hdc1080.o
       968        112          0         18         64      10938   i2c.o
       208         36          0          8          0     209728   main.o
       744         34        518          2         12       9739   modbus.o
       688         70         50         24          0       4151   modbus_func.o
        36          6          0          0         10        582   pub_var.o
        36          8          0          0          0        933   rtx_config.o
       138          6        204       5329          0      11288   rtx_lib.o
        56         26        180          0       1792        628   startup_stm32f030x8.o
       852         44         32          1         16       2487   stepper_motor.o
       584         54          0          0          0       5233   stm32f0xx_dma.o
       212          0          0          0          0      14535   stm32f0xx_gpio.o
       112          6          0          0          0        808   stm32f0xx_misc.o
       584         30          0         16          0       1764   stm32f0xx_rcc.o
       478         22          0          0          0       5571   stm32f0xx_usart.o
       428         42         16          4          0       1749   system_stm32f0xx.o
       332         48          0          0          0       1447   timer.o
      1396        154          0        148        272       6791   uart.o
        16          0          0          0          0        463   util.o

    ----------------------------------------------------------------------
      8888        850       1036       5592       2168     294571   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          4         18          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       152         10          1          0          0        500   irq_cm0.o
        54          4          0          0          0       2752   rtx_delay.o
      1128         24          0          0          0      13117   rtx_evflags.o
       756         52         11        168          0      16970   rtx_kernel.o
       246          0          0          0          0       2071   rtx_memory.o
       184          0          0          0          0      15766   rtx_mempool.o
       436          8          0          0          0      18819   rtx_msgqueue.o
       938         32          0          0          0       8607   rtx_mutex.o
       476         68          0          0          0       7480   rtx_system.o
      2782         84          0          0          0      39176   rtx_thread.o
       164          4          0          0          0       8403   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset4.o
       488          0          0          0          0         92   aeabi_sdivfast.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      8412        302         16        168         96     134621   Library Totals
         6          0          4          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7316        286         12        168          0     133661   RTX_CM0.lib
      1090         16          0          0         96        960   c_p.l

    ----------------------------------------------------------------------
      8412        302         16        168         96     134621   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17300       1152       1052       5760       2264     425812   Grand Totals
     17300       1152       1052        112       2264     425812   ELF Image Totals (compressed)
     17300       1152       1052        112          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                18352 (  17.92kB)
    Total RW  Size (RW Data + ZI Data)              8024 (   7.84kB)
    Total ROM Size (Code + RO Data + RW Data)      18464 (  18.03kB)

==============================================================================

